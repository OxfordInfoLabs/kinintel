<?php

namespace Kinintel\Test\Services\Util\Analysis\TextAnalysis\Extractors;

use Kinintel\Services\Util\Analysis\TextAnalysis\Extractors\PDFTextExtractor;

include_once "autoloader.php";

class PDFTextExtractorTest extends \PHPUnit\Framework\TestCase {

    /**
     * @var PDFTextExtractor
     */
    private $extractor;

    public function setUp(): void {
        $this->extractor = new PDFTextExtractor();

        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testCanExtractTextFromPDFString() {
        $string = file_get_contents(__DIR__ . "/test.pdf");

        $output = $this->extractor->extractTextFromString($string);

        $this->assertEquals("Hello Docx Test", $output);
    }

    public function testCanExtractTextFromPDFFile() {
        $file = __DIR__ . "/test.pdf";

        $output = $this->extractor->extractTextFromFile($file);

        $this->assertEquals("Hello Docx Test", $output);
    }

    public function testExtractParagraph(){
        $filename = __DIR__ . "/SAIGF18Report.pdf";
        $paragraphs = $this->extractor->extractChunksFromFile($filename);

        foreach ($paragraphs as $paragraph){
            if (str_contains($paragraph->getText(), "Ms Nomoso Kana made a presentation on how will technology reshape jobs")){
                $nomsoKanaSegment = $paragraph->getText();
                break;
            }
        }

        $this->assertTrue(isset($nomsoKanaSegment));
        $this->assertTrue(str_contains($nomsoKanaSegment, "She explained how various industries will be affected by the 4th Industrial Revolution"));
        $this->assertFalse(str_contains($nomsoKanaSegment, "She emphasised that thereâ€™s no Digital Transformation without Connectivity."));
        $this->assertFalse(str_contains($nomsoKanaSegment, "At least 3000 delegates from around 143 countries descended to Paris"));
    }
}